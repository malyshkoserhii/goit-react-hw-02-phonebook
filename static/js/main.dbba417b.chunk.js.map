{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","phoneNumberId","handleContactInputChange","e","currentTarget","value","setState","handleContactSubmit","preventDefault","props","exsisted","alert","reset","onAddNewContact","this","className","s","phonebookTitle","form","onSubmit","htmlFor","label","labelDescription","type","id","input","onChange","addContactBtn","Component","ContactsList","contacts","onDeleteContact","contactsList","map","ContactsListItem","contact","deleteBtn","onClick","protoTypes","PropTypes","array","isRequired","func","Filter","changeFilter","filterInputId","contactsSection","contactsTitle","findDescription","App","filter","addNewContact","uuidv4","deleteContact","contactId","prevState","getExistedContact","find","getFilteredContacts","normalizedFilter","toLocaleLowerCase","includes","filteredContacts","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbba417b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookTitle\":\"ContactForm_phonebookTitle__1oN7E\",\"form\":\"ContactForm_form__3cQH1\",\"label\":\"ContactForm_label__1ciow\",\"labelDescription\":\"ContactForm_labelDescription__26e_g\",\"input\":\"ContactForm_input__2cnRn\",\"addContactBtn\":\"ContactForm_addContactBtn__39PN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__3IAcv\",\"ContactsListItem\":\"ContactList_ContactsListItem__1w_Sz\",\"contact\":\"ContactList_contact__37TId\",\"deleteBtn\":\"ContactList_deleteBtn__Fdds5\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onAddNewContact: PropTypes.func,\n    exsisted: PropTypes.func,\n  };\n\n  nameInputId = shortid.generate();\n  phoneNumberId = shortid.generate();\n\n  handleContactInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleContactSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (this.props.exsisted(name)) {\n      alert(`${name} is alredy in contacts.`);\n      this.reset();\n      return;\n    }\n\n    this.props.onAddNewContact(name, number);\n\n    this.reset();\n  };\n\n  reset() {\n    this.setState({ name: '', number: '' });\n  }\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <h1 className={s.phonebookTitle}>Phonebook</h1>\n        <form className={s.form} onSubmit={this.handleContactSubmit}>\n          <label htmlFor={this.nameInputId} className={s.label}>\n            <span className={s.labelDescription}> Name</span>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              id={this.nameInputId}\n              className={s.input}\n              onChange={this.handleContactInputChange}\n            />\n          </label>\n\n          <label htmlFor={this.phoneNumberId} className={s.label}>\n            <span className={s.labelDescription}>Number</span>\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              id={this.phoneNumberId}\n              className={s.input}\n              onChange={this.handleContactInputChange}\n            />\n          </label>\n\n          <button type=\"submit\" className={s.addContactBtn}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.ContactsListItem}>\n          <p className={s.contact}>\n            <span className={s.name}>{name}:</span>\n            <span className={s.number}>{number}</span>\n          </p>\n          <button className={s.deleteBtn} onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.protoTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactsList;\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nconst Filter = ({ value, changeFilter }) => {\n  const filterInputId = shortid.generate();\n\n  return (\n    <section className={s.contactsSection}>\n      <h2 className={s.contactsTitle}>Contacts</h2>\n      <label htmlFor={filterInputId} className={s.label}>\n        <span className={s.findDescription}>Find contact by name:</span>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          id={filterInputId}\n          className={s.input}\n          onChange={changeFilter}\n        />\n      </label>\n    </section>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addNewContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getExistedContact = name => {\n    const { contacts } = this.state;\n    return contacts.find(contact => contact.name === name);\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <>\n        <ContactForm\n          onAddNewContact={this.addNewContact}\n          exsisted={this.getExistedContact}\n        />\n        <Filter value={filter} changeFilter={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsSection\":\"Filter_contactsSection__3ikH8\",\"contactsTitle\":\"Filter_contactsTitle__pBAJZ\",\"label\":\"Filter_label__JAAjw\",\"findDescription\":\"Filter_findDescription__CV7hB\",\"input\":\"Filter_input__3ZWQQ\"};"],"sourceRoot":""}